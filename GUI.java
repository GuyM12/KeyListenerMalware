import javafx.scene.layout.Border;

import javax.swing.*;
import javax.swing.border.LineBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.MalformedURLException;
import java.net.URL;


public class GUI implements ActionListener {

    KeyLogger keylogger;
    private JFrame frame;
    private Container container;
    private JPanel leftPanel;
    private JPanel centerPanel;
    private static boolean saveStrokes;
    private static boolean  run;
    private static JTextArea text;
    private JButton btnstart;
    private JButton btnstop;
    private JButton btnSave;
    private JButton btnClear;
    private JTextArea background;


    public GUI(){
        frame = new JFrame();
        saveStrokes = false;
        btnstart = new JButton("START");
        btnstop = new JButton("STOP");
        btnSave = new JButton("RECORD");
        btnClear = new JButton("CLEAR");
        background = new JTextArea();

        background.setEditable(false);
        background.setLineWrap(true);
        background.setSize(frame.getWidth(),frame.getHeight());
        background.append("afbdsjkfhghsdfkghkjsdfhgkhsdfdddddddddddddddddddddddddddddddddddddddg\n\n\n\n\n\n\n");

        //frame.add(background);


        btnstart.addActionListener(this);
        btnstop.addActionListener(this);
        btnSave.addActionListener(this);
        btnClear.addActionListener(this);
        //btnstop.setFont(new Font("Serif",Font.BOLD,12));
        btnSave.setPreferredSize(new Dimension(110,20));
        btnstop.setPreferredSize(new Dimension(110,20));
        btnstart.setPreferredSize(new Dimension(110,20));
        btnClear.setPreferredSize(new Dimension(110,20));

        container = frame.getContentPane();
        container.setLayout(new BorderLayout(8,6));
        //container.setBackground(Color.green);
        frame.getRootPane().setBorder(BorderFactory.createMatteBorder(4,4,4,4,frame.getBackground()));
        leftPanel = new JPanel();
        centerPanel = new JPanel();
        //centerPanel.setBackground(Color.red);

        ImageIcon icon = null;
        try {
            icon = new ImageIcon(new URL("https://d1nhio0ox7pgb.cloudfront.net/_img/o_collection_png/green_dark_grey/512x512/plain/keyboard.png"));
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }

        text = new JTextArea();
        text.setEditable(false);
        text.setLineWrap(true);

        JScrollPane scrollPane = new JScrollPane(text,JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        scrollPane.setPreferredSize(new Dimension(300,350));
        centerPanel.add(scrollPane);

        leftPanel.setLayout(new GridLayout(0,1));
        leftPanel.add(btnstart);
        leftPanel.add(Box.createRigidArea(new Dimension(0,5)));
        leftPanel.add(btnstop);
        leftPanel.add(Box.createRigidArea(new Dimension(0,10)));
        leftPanel.add(btnSave);
        leftPanel.add(Box.createRigidArea(new Dimension(0,10)));
        leftPanel.add(btnClear);
        //leftPanel.setBackground(Color.blue);

        container.add(centerPanel, BorderLayout.CENTER);
        container.add(leftPanel,BorderLayout.WEST);

        frame.setPreferredSize(new Dimension(500,500));
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setTitle("KeyLogger");
        frame.setIconImage(icon.getImage());
        frame.pack();
        frame.setVisible(true);

    }

    public static void main(String[] args) {
        new GUI();
    }

    @Override
    public void actionPerformed(ActionEvent e) {

        if(e.getActionCommand().equals("START")) {
            keylogger = new KeyLogger();
            keylogger.run();
            run = true;
        }else if(e.getActionCommand().equals("STOP")){
            run = false;
        }else if(e.getActionCommand().equals("RECORD")){
            saveStrokes = !saveStrokes;
            btnSave.setText("RECORDING...");
        }else if(e.getActionCommand().equals("RECORDING...")){
            saveStrokes = !saveStrokes;
            btnSave.setText("RECORD");
        }else if(e.getActionCommand().equals("CLEAR")){
            text.setText(null);
        }
    }

    public static boolean getRun(){
        return run;
    }

    public static boolean getSaveStrokes(){ return saveStrokes;}

    public static void updatePrinting(String txt){
        text.append(txt);
    }


}
